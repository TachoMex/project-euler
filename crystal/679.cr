
# (0..15).each do |k|
#   has_free = k & (1<<0) != 0
#   has_fare = k & (1<<1) != 0
#   has_area = k & (1<<2) != 0
#   has_reef = k & (1<<3) != 0
#   string = [has_free && "FREE", has_fare && "FARE", has_area && "AREA", has_reef && "REEF"].select  { |r| r}.join("+").ljust(20)
# template = <<-TEMPLATE
# #### #{string}
#   #  A    R    E    F
#   [#{(k * 16 + 2).to_s.rjust(3)}, #{(k * 16 +  3).to_s.rjust(3)}, #{(k * 16 +  0).to_s.rjust(3)}, #{(k * 16 +  1).to_s.rjust(3)}], # Empty string       # #{(k * 16 +  0).to_s.rjust(3)}
#   [#{(k * 16 + 5).to_s.rjust(3)}, #{(k * 16 +  4).to_s.rjust(3)}, #{(k * 16 +  0).to_s.rjust(3)}, #{(k * 16 +  1).to_s.rjust(3)}], # F                  # #{(k * 16 +  1).to_s.rjust(3)}
#   [#{(k * 16 + 2).to_s.rjust(3)}, #{(k * 16 + 10).to_s.rjust(3)}, #{(k * 16 +  0).to_s.rjust(3)}, #{(k * 16 +  1).to_s.rjust(3)}], # A                  # #{(k * 16 +  2).to_s.rjust(3)}
#   [#{(k * 16 + 2).to_s.rjust(3)}, #{(k * 16 +  3).to_s.rjust(3)}, #{(k * 16 + 13).to_s.rjust(3)}, #{(k * 16 +  1).to_s.rjust(3)}], # R                  # #{(k * 16 +  3).to_s.rjust(3)}
#   [#{(k * 16 + 2).to_s.rjust(3)}, #{(k * 16 +  3).to_s.rjust(3)}, #{(k * 16 +  6).to_s.rjust(3)}, #{(k * 16 +  1).to_s.rjust(3)}], # FR                 # #{(k * 16 +  4).to_s.rjust(3)}
#   [#{(k * 16 + 2).to_s.rjust(3)}, #{(k * 16 +  8).to_s.rjust(3)}, #{(k * 16 +  0).to_s.rjust(3)}, #{(k * 16 +  1).to_s.rjust(3)}], # FA                 # #{(k * 16 +  5).to_s.rjust(3)}
#   [#{(k * 16 + 2).to_s.rjust(3)}, #{(k * 16 +  3).to_s.rjust(3)}, #{(has_free ? -1 : (k + 1) * 16 +  14).to_s.rjust(3)}, #{(k * 16 +  1).to_s.rjust(3)}], # FRE                # #{(k * 16 +  6).to_s.rjust(3)}
#   [-1, -1, -1, -1],     # FREE               # #{(k * 16 +  7).to_s.rjust(3)}
#   [#{(k * 16 + 2).to_s.rjust(3)}, #{(k * 16 +  3).to_s.rjust(3)}, #{(has_fare ? -1 : (k + 2)* 16 +  11).to_s.rjust(3)}, #{(k * 16 +  1).to_s.rjust(3)}], # FAR                # #{(k * 16 +  8).to_s.rjust(3)}
#   [-1, -1, -1, -1],     # FARE               # #{(k * 16 +  9).to_s.rjust(3)}
#   [#{(k * 16 + 2).to_s.rjust(3)}, #{(k * 16 +  3).to_s.rjust(3)}, #{(k * 16 + 11).to_s.rjust(3)}, #{(k * 16 +  1).to_s.rjust(3)}], # AR                 # #{(k * 16 + 10).to_s.rjust(3)}
#   [#{(has_area ? -1 : (k + 4)* 16 + 2).to_s.rjust(3)}, #{(k * 16 +  3).to_s.rjust(3)}, #{(k * 16 + 14).to_s.rjust(3)}, #{(k * 16 +  1).to_s.rjust(3)}], # ARE                # #{(k * 16 + 11).to_s.rjust(3)}
#   [-1, -1, -1, -1],     # AREA               # #{(k * 16 + 12).to_s.rjust(3)}
#   [#{(k * 16 + 2).to_s.rjust(3)}, #{(k * 16 +  3).to_s.rjust(3)}, #{(k * 16 + 14).to_s.rjust(3)}, #{(k * 16 +  1).to_s.rjust(3)}], # RE                 # #{(k * 16 + 13).to_s.rjust(3)}
#   [#{(k * 16 + 2).to_s.rjust(3)}, #{(k * 16 +  3).to_s.rjust(3)}, #{(k * 16 +  0).to_s.rjust(3)}, #{(has_reef ? -1 : (k + 8) * 16 + 1).to_s.rjust(3)}], # REE                # #{(k * 16 + 14).to_s.rjust(3)}
#   [-1, -1, -1, -1],     # REEF               # #{(k * 16 + 15).to_s.rjust(3)}
# TEMPLATE
# puts template
# end
# exit 0

STATES = [
  ####
  #  A    R    E    F
  [  2,   3,   0,   1], # Empty string       #   0
  [  5,   4,   0,   1], # F                  #   1
  [  2,  10,   0,   1], # A                  #   2
  [  2,   3,  13,   1], # R                  #   3
  [  2,   3,   6,   1], # FR                 #   4
  [  2,   8,   0,   1], # FA                 #   5
  [  2,   3,  30,   1], # FRE                #   6
  [-1, -1, -1, -1],     # FREE               #   7
  [  2,   3,  43,   1], # FAR                #   8
  [-1, -1, -1, -1],     # FARE               #   9
  [  2,   3,  11,   1], # AR                 #  10
  [ 66,   3,  14,   1], # ARE                #  11
  [-1, -1, -1, -1],     # AREA               #  12
  [  2,   3,  14,   1], # RE                 #  13
  [  2,   3,   0, 129], # REE                #  14
  [-1, -1, -1, -1],     # REEF               #  15
#### FREE
  #  A    R    E    F
  [ 18,  19,  16,  17], # Empty string       #  16
  [ 21,  20,  16,  17], # F                  #  17
  [ 18,  26,  16,  17], # A                  #  18
  [ 18,  19,  29,  17], # R                  #  19
  [ 18,  19,  22,  17], # FR                 #  20
  [ 18,  24,  16,  17], # FA                 #  21
  [ 18,  19,  -1,  17], # FRE                #  22
  [-1, -1, -1, -1],     # FREE               #  23
  [ 18,  19,  59,  17], # FAR                #  24
  [-1, -1, -1, -1],     # FARE               #  25
  [ 18,  19,  27,  17], # AR                 #  26
  [ 82,  19,  30,  17], # ARE                #  27
  [-1, -1, -1, -1],     # AREA               #  28
  [ 18,  19,  30,  17], # RE                 #  29
  [ 18,  19,  16, 145], # REE                #  30
  [-1, -1, -1, -1],     # REEF               #  31
#### FARE
  #  A    R    E    F
  [ 34,  35,  32,  33], # Empty string       #  32
  [ 37,  36,  32,  33], # F                  #  33
  [ 34,  42,  32,  33], # A                  #  34
  [ 34,  35,  45,  33], # R                  #  35
  [ 34,  35,  38,  33], # FR                 #  36
  [ 34,  40,  32,  33], # FA                 #  37
  [ 34,  35,  62,  33], # FRE                #  38
  [-1, -1, -1, -1],     # FREE               #  39
  [ 34,  35,  -1,  33], # FAR                #  40
  [-1, -1, -1, -1],     # FARE               #  41
  [ 34,  35,  43,  33], # AR                 #  42
  [ 98,  35,  46,  33], # ARE                #  43
  [-1, -1, -1, -1],     # AREA               #  44
  [ 34,  35,  46,  33], # RE                 #  45
  [ 34,  35,  32, 161], # REE                #  46
  [-1, -1, -1, -1],     # REEF               #  47
#### FREE+FARE
  #  A    R    E    F
  [ 50,  51,  48,  49], # Empty string       #  48
  [ 53,  52,  48,  49], # F                  #  49
  [ 50,  58,  48,  49], # A                  #  50
  [ 50,  51,  61,  49], # R                  #  51
  [ 50,  51,  54,  49], # FR                 #  52
  [ 50,  56,  48,  49], # FA                 #  53
  [ 50,  51,  -1,  49], # FRE                #  54
  [-1, -1, -1, -1],     # FREE               #  55
  [ 50,  51,  -1,  49], # FAR                #  56
  [-1, -1, -1, -1],     # FARE               #  57
  [ 50,  51,  59,  49], # AR                 #  58
  [114,  51,  62,  49], # ARE                #  59
  [-1, -1, -1, -1],     # AREA               #  60
  [ 50,  51,  62,  49], # RE                 #  61
  [ 50,  51,  48, 177], # REE                #  62
  [-1, -1, -1, -1],     # REEF               #  63
#### AREA
  #  A    R    E    F
  [ 66,  67,  64,  65], # Empty string       #  64
  [ 69,  68,  64,  65], # F                  #  65
  [ 66,  74,  64,  65], # A                  #  66
  [ 66,  67,  77,  65], # R                  #  67
  [ 66,  67,  70,  65], # FR                 #  68
  [ 66,  72,  64,  65], # FA                 #  69
  [ 66,  67,  94,  65], # FRE                #  70
  [-1, -1, -1, -1],     # FREE               #  71
  [ 66,  67, 107,  65], # FAR                #  72
  [-1, -1, -1, -1],     # FARE               #  73
  [ 66,  67,  75,  65], # AR                 #  74
  [ -1,  67,  78,  65], # ARE                #  75
  [-1, -1, -1, -1],     # AREA               #  76
  [ 66,  67,  78,  65], # RE                 #  77
  [ 66,  67,  64, 193], # REE                #  78
  [-1, -1, -1, -1],     # REEF               #  79
#### FREE+AREA
  #  A    R    E    F
  [ 82,  83,  80,  81], # Empty string       #  80
  [ 85,  84,  80,  81], # F                  #  81
  [ 82,  90,  80,  81], # A                  #  82
  [ 82,  83,  93,  81], # R                  #  83
  [ 82,  83,  86,  81], # FR                 #  84
  [ 82,  88,  80,  81], # FA                 #  85
  [ 82,  83,  -1,  81], # FRE                #  86
  [-1, -1, -1, -1],     # FREE               #  87
  [ 82,  83, 123,  81], # FAR                #  88
  [-1, -1, -1, -1],     # FARE               #  89
  [ 82,  83,  91,  81], # AR                 #  90
  [ -1,  83,  94,  81], # ARE                #  91
  [-1, -1, -1, -1],     # AREA               #  92
  [ 82,  83,  94,  81], # RE                 #  93
  [ 82,  83,  80, 209], # REE                #  94
  [-1, -1, -1, -1],     # REEF               #  95
#### FARE+AREA
  #  A    R    E    F
  [ 98,  99,  96,  97], # Empty string       #  96
  [101, 100,  96,  97], # F                  #  97
  [ 98, 106,  96,  97], # A                  #  98
  [ 98,  99, 109,  97], # R                  #  99
  [ 98,  99, 102,  97], # FR                 # 100
  [ 98, 104,  96,  97], # FA                 # 101
  [ 98,  99, 126,  97], # FRE                # 102
  [-1, -1, -1, -1],     # FREE               # 103
  [ 98,  99,  -1,  97], # FAR                # 104
  [-1, -1, -1, -1],     # FARE               # 105
  [ 98,  99, 107,  97], # AR                 # 106
  [ -1,  99, 110,  97], # ARE                # 107
  [-1, -1, -1, -1],     # AREA               # 108
  [ 98,  99, 110,  97], # RE                 # 109
  [ 98,  99,  96, 225], # REE                # 110
  [-1, -1, -1, -1],     # REEF               # 111
#### FREE+FARE+AREA
  #  A    R    E    F
  [114, 115, 112, 113], # Empty string       # 112
  [117, 116, 112, 113], # F                  # 113
  [114, 122, 112, 113], # A                  # 114
  [114, 115, 125, 113], # R                  # 115
  [114, 115, 118, 113], # FR                 # 116
  [114, 120, 112, 113], # FA                 # 117
  [114, 115,  -1, 113], # FRE                # 118
  [-1, -1, -1, -1],     # FREE               # 119
  [114, 115,  -1, 113], # FAR                # 120
  [-1, -1, -1, -1],     # FARE               # 121
  [114, 115, 123, 113], # AR                 # 122
  [ -1, 115, 126, 113], # ARE                # 123
  [-1, -1, -1, -1],     # AREA               # 124
  [114, 115, 126, 113], # RE                 # 125
  [114, 115, 112, 241], # REE                # 126
  [-1, -1, -1, -1],     # REEF               # 127
#### REEF
  #  A    R    E    F
  [130, 131, 128, 129], # Empty string       # 128
  [133, 132, 128, 129], # F                  # 129
  [130, 138, 128, 129], # A                  # 130
  [130, 131, 141, 129], # R                  # 131
  [130, 131, 134, 129], # FR                 # 132
  [130, 136, 128, 129], # FA                 # 133
  [130, 131, 158, 129], # FRE                # 134
  [-1, -1, -1, -1],     # FREE               # 135
  [130, 131, 171, 129], # FAR                # 136
  [-1, -1, -1, -1],     # FARE               # 137
  [130, 131, 139, 129], # AR                 # 138
  [194, 131, 142, 129], # ARE                # 139
  [-1, -1, -1, -1],     # AREA               # 140
  [130, 131, 142, 129], # RE                 # 141
  [130, 131, 128,  -1], # REE                # 142
  [-1, -1, -1, -1],     # REEF               # 143
#### FREE+REEF
  #  A    R    E    F
  [146, 147, 144, 145], # Empty string       # 144
  [149, 148, 144, 145], # F                  # 145
  [146, 154, 144, 145], # A                  # 146
  [146, 147, 157, 145], # R                  # 147
  [146, 147, 150, 145], # FR                 # 148
  [146, 152, 144, 145], # FA                 # 149
  [146, 147,  -1, 145], # FRE                # 150
  [-1, -1, -1, -1],     # FREE               # 151
  [146, 147, 187, 145], # FAR                # 152
  [-1, -1, -1, -1],     # FARE               # 153
  [146, 147, 155, 145], # AR                 # 154
  [210, 147, 158, 145], # ARE                # 155
  [-1, -1, -1, -1],     # AREA               # 156
  [146, 147, 158, 145], # RE                 # 157
  [146, 147, 144,  -1], # REE                # 158
  [-1, -1, -1, -1],     # REEF               # 159
#### FARE+REEF
  #  A    R    E    F
  [162, 163, 160, 161], # Empty string       # 160
  [165, 164, 160, 161], # F                  # 161
  [162, 170, 160, 161], # A                  # 162
  [162, 163, 173, 161], # R                  # 163
  [162, 163, 166, 161], # FR                 # 164
  [162, 168, 160, 161], # FA                 # 165
  [162, 163, 190, 161], # FRE                # 166
  [-1, -1, -1, -1],     # FREE               # 167
  [162, 163,  -1, 161], # FAR                # 168
  [-1, -1, -1, -1],     # FARE               # 169
  [162, 163, 171, 161], # AR                 # 170
  [226, 163, 174, 161], # ARE                # 171
  [-1, -1, -1, -1],     # AREA               # 172
  [162, 163, 174, 161], # RE                 # 173
  [162, 163, 160,  -1], # REE                # 174
  [-1, -1, -1, -1],     # REEF               # 175
#### FREE+FARE+REEF
  #  A    R    E    F
  [178, 179, 176, 177], # Empty string       # 176
  [181, 180, 176, 177], # F                  # 177
  [178, 186, 176, 177], # A                  # 178
  [178, 179, 189, 177], # R                  # 179
  [178, 179, 182, 177], # FR                 # 180
  [178, 184, 176, 177], # FA                 # 181
  [178, 179,  -1, 177], # FRE                # 182
  [-1, -1, -1, -1],     # FREE               # 183
  [178, 179,  -1, 177], # FAR                # 184
  [-1, -1, -1, -1],     # FARE               # 185
  [178, 179, 187, 177], # AR                 # 186
  [242, 179, 190, 177], # ARE                # 187
  [-1, -1, -1, -1],     # AREA               # 188
  [178, 179, 190, 177], # RE                 # 189
  [178, 179, 176,  -1], # REE                # 190
  [-1, -1, -1, -1],     # REEF               # 191
#### AREA+REEF
  #  A    R    E    F
  [194, 195, 192, 193], # Empty string       # 192
  [197, 196, 192, 193], # F                  # 193
  [194, 202, 192, 193], # A                  # 194
  [194, 195, 205, 193], # R                  # 195
  [194, 195, 198, 193], # FR                 # 196
  [194, 200, 192, 193], # FA                 # 197
  [194, 195, 222, 193], # FRE                # 198
  [-1, -1, -1, -1],     # FREE               # 199
  [194, 195, 235, 193], # FAR                # 200
  [-1, -1, -1, -1],     # FARE               # 201
  [194, 195, 203, 193], # AR                 # 202
  [ -1, 195, 206, 193], # ARE                # 203
  [-1, -1, -1, -1],     # AREA               # 204
  [194, 195, 206, 193], # RE                 # 205
  [194, 195, 192,  -1], # REE                # 206
  [-1, -1, -1, -1],     # REEF               # 207
#### FREE+AREA+REEF
  #  A    R    E    F
  [210, 211, 208, 209], # Empty string       # 208
  [213, 212, 208, 209], # F                  # 209
  [210, 218, 208, 209], # A                  # 210
  [210, 211, 221, 209], # R                  # 211
  [210, 211, 214, 209], # FR                 # 212
  [210, 216, 208, 209], # FA                 # 213
  [210, 211,  -1, 209], # FRE                # 214
  [-1, -1, -1, -1],     # FREE               # 215
  [210, 211, 251, 209], # FAR                # 216
  [-1, -1, -1, -1],     # FARE               # 217
  [210, 211, 219, 209], # AR                 # 218
  [ -1, 211, 222, 209], # ARE                # 219
  [-1, -1, -1, -1],     # AREA               # 220
  [210, 211, 222, 209], # RE                 # 221
  [210, 211, 208,  -1], # REE                # 222
  [-1, -1, -1, -1],     # REEF               # 223
#### FARE+AREA+REEF
  #  A    R    E    F
  [226, 227, 224, 225], # Empty string       # 224
  [229, 228, 224, 225], # F                  # 225
  [226, 234, 224, 225], # A                  # 226
  [226, 227, 237, 225], # R                  # 227
  [226, 227, 230, 225], # FR                 # 228
  [226, 232, 224, 225], # FA                 # 229
  [226, 227, 254, 225], # FRE                # 230
  [-1, -1, -1, -1],     # FREE               # 231
  [226, 227,  -1, 225], # FAR                # 232
  [-1, -1, -1, -1],     # FARE               # 233
  [226, 227, 235, 225], # AR                 # 234
  [ -1, 227, 238, 225], # ARE                # 235
  [-1, -1, -1, -1],     # AREA               # 236
  [226, 227, 238, 225], # RE                 # 237
  [226, 227, 224,  -1], # REE                # 238
  [-1, -1, -1, -1],     # REEF               # 239
#### FREE+FARE+AREA+REEF
  #  A    R    E    F
  [242, 243, 240, 241], # Empty string       # 240
  [245, 244, 240, 241], # F                  # 241
  [242, 250, 240, 241], # A                  # 242
  [242, 243, 253, 241], # R                  # 243
  [242, 243, 246, 241], # FR                 # 244
  [242, 248, 240, 241], # FA                 # 245
  [242, 243,  -1, 241], # FRE                # 246
  [-1, -1, -1, -1],     # FREE               # 247
  [242, 243,  -1, 241], # FAR                # 248
  [-1, -1, -1, -1],     # FARE               # 249
  [242, 243, 251, 241], # AR                 # 250
  [ -1, 243, 254, 241], # ARE                # 251
  [-1, -1, -1, -1],     # AREA               # 252
  [242, 243, 254, 241], # RE                 # 253
  [242, 243, 240,  -1], # REE                # 254
  [-1, -1, -1, -1],     # REEF               # 255

]


def validate(str)
  char_index = { 'A' => 0, 'R' => 1, 'E' => 2, 'F' => 3 }
  state = 0
  puts "Validating #{str}"
  str.chars.each do |c|
    new_state = STATES[state][char_index[c]]
    puts "state: #{state} char: #{c} new_state: #{new_state}"
    return false if new_state == -1
    state = new_state
  end
  state >= 240
end

dp = Array(Array(Int64)).new(40) { Array(Int64).new(256, 0) }

dp[0][0] = 1

# %w[FREEFAREA FREEFAREAFREE FAER FREE REEFAREAFREE REEFAREAFREEF].each do |s|
#   puts "#{s} => #{validate(s)}"
# end

# AFARREEFAREA
# EFARREEFAREA
# FAREAFARREEF
# FARREEFAREAA
# FARREEFAREAE
# FARREEFAREAF
# FARREEFAREAR
# FARREEFFAREA
# FFARREEFAREA
# RFARREEFAREA
%w[
  FREFARE
  FREEFREFAREA
  FREFREEFAREA
].each do |s|
  puts "#{s} => #{validate(s)}"
end

# def count_em(str, substr)
#   str.scan(/(?=#{substr})/).count { |c| c}
# end


# def validate2(str)
#   %w[FARE FREE REEF AREA].each do |s|
#     return false if count_em(str, s) != 1
#   end
#   true
# end

# count = 0
# count2 = 0
# %w[A E F R].each_repeated_permutation(12) do |s|
#   v1 = validate(s.join)
#   v2 = validate2(s.join)
#   count += 1 if v1
#   count2 += 1 if v2
#   puts s.join if v1 != v2
# end


(0..31).each do |i|
  (0...256).each do |j|
    (0...4).each do |k|
      new_state = STATES[j][k]
      next if new_state == -1
      dp[i + 1][new_state] += dp[i][j]
    end
  end
  puts "#{i} #{dp[i][240..-1].sum}"
end
# puts count